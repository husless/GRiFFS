<?xml version="1.0" encoding="utf-8"?>
<viewer:BaseWidget xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:esri="http://www.esri.com/2008/ags"
				   xmlns:viewer="jzjw.winder.viewer.*"
				   xmlns:components="jzjw.winder.viewer.components.*"
				   initialize="basewidget_initializeHandler()"
				   widgetConfigLoaded="basewidget_widgetConfigLoaded()">
	<fx:Script>
		<![CDATA[
			import com.esri.ags.Graphic;
			import com.esri.ags.events.DrawEvent;
			import com.esri.ags.events.GeometryServiceEvent;
			import com.esri.ags.geometry.Extent;
			import com.esri.ags.geometry.Geometry;
			import com.esri.ags.geometry.MapPoint;
			import com.esri.ags.geometry.Polygon;
			import com.esri.ags.symbols.SimpleFillSymbol;
			import com.esri.ags.symbols.SimpleMarkerSymbol;
			import com.esri.ags.symbols.Symbol;
			import com.esri.ags.tasks.supportClasses.IdentifyParameters;
			import com.esri.ags.tasks.supportClasses.IdentifyResult;
			import com.esri.ags.tools.DrawTool;
			import com.esri.ags.utils.GeometryUtil;
			import com.esri.ags.utils.GraphicUtil;
			import com.esri.ags.utils.JSONUtil;
			import jzjw.winder.viewer.AppEvent;
			import jzjw.winder.viewer.AppUtil;
			import jzjw.winder.viewer.ViewerContainer;
			import jzjw.winder.viewer.components.FocusableImage;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.AsyncResponder;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var title:String="";
			private var reqUrl:String="";
			[Bindable]
			private var pointLabel:String= "点选区域河网段";
			[Bindable]
			private var rectangleLabel:String= "框选区域河网段";
			
			private var selectedDrawingIcon:FocusableImage;
			private var drawSymbol:Symbol;
			private var resultMarkerSymbol:Symbol;
			private var resultLineSymbol:Symbol;
			private var resultFillSymbol:Symbol;
			private var shareResults:Boolean;
			
			private var pointSearchTolerance:Number = 6;
			private var finishDrawing:Boolean;
			private function basewidget_initializeHandler():void
			{
				if (isPartOfPanel) // if widget is part of "left", "right" or "bottom" panel
				{
					this.percentWidth = this.percentHeight = 100;
				}
				else{
					this.width=230;
					this.height=300;
				}
			}
			
			private function basewidget_widgetConfigLoaded():void{
				if (configXML){
					reqUrl = configXML.url;
					title = configXML.labels.title || getDefaultString("leftNavTitle");
				}				
				AppEvent.addListener(AppEvent.DATA_PUBLISH,sharedDataUpdated);
				accordion.selectedIndex=1;
			}
			
			private function sharedDataUpdated(event:AppEvent):void{
				var data:Object = event.data;
				if(data.key=="currprjname"){
					var ac:ArrayCollection=data.collection;
					lblCurrWaterPrjName.text="当前方案名称：\n    "+ac.getItemAt(0) as String;
				}	
				
				
			}
			
			private function getWaterPrjNewId():void{
				try{
					var params:URLVariables = new URLVariables();
					params.slnclass="w";
					var url:String=reqUrl+"WinderHandler.aspx?act=scmnewid";
					AppUtil.req(url,params,onGetWaterPrjNewIdResult);
					this.cursorManager.setBusyCursor();	
				}
				catch(err:Error){
					this.cursorManager.removeBusyCursor();
					showError(String(err),"方案新编号");
				}
			}
			
			private function onGetWaterPrjNewIdResult(event:ResultEvent):void{
				var strResult:String=event.result as String;
				this.cursorManager.removeBusyCursor();	
				if(strResult){
					var obj:Object=JSON.parse(strResult);
					if(obj.id!=""){
						var ac:ArrayCollection=new ArrayCollection();
						ac.addItem(obj.id);
						this.cursorManager.removeBusyCursor();	
						this.addSharedData("newwaterprjid",ac);
					}					
				}
			}
			
			private function widgetClosedHandler(event:Event):void{
				
			}
			
			private function widgetOpenedHandler(event:Event):void{
			}
			
			protected function btnWaterPrjNew_clickHandler(event:MouseEvent):void{
				AppEvent.dispatch(AppEvent.WIDGET_RUN,ViewerContainer.getInstance().getWidgetId("新建水文预报方案"));
				var timer:Timer = new Timer(1000, 1);
				timer.addEventListener(TimerEvent.TIMER_COMPLETE, onStartWaterPrjNewId);
				timer.start();
			}
			
			private function onStartWaterPrjNewId(event:TimerEvent):void{
				getWaterPrjNewId();
			}
			
			private function activateDrawTool(event:MouseEvent):void{
				selectedDrawingIcon = FocusableImage(event.currentTarget);
				clearSelectionFilter();
				selectedDrawingIcon.filters = [ glowFilter ];
				
				finishDrawing = false;
				
				map.defaultGraphicsLayer.clear();
				this.setMapNavigation("","");
				
				var status:String;
				var value:String = selectedDrawingIcon.name;
				switch (value){
					case DrawTool.MAPPOINT:{
						status = pointLabel;
						drawSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_CIRCLE, 15, 0x3FAFDC, 1);
						break;
					}
					case DrawTool.EXTENT:{
						status = rectangleLabel;
						drawSymbol = new SimpleFillSymbol(SimpleFillSymbol.STYLE_SOLID, 0x3FAFDC, 0.5, new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, 0x3FAFDC, 1, 1));
						break;
					}
				}
				setMapAction(value, status, drawSymbol, searchDrawEnd);
			}
			
			
			private function searchDrawEnd(event:DrawEvent):void
			{
				var geom:Geometry = event.graphic.geometry;
				
				if (geom is Polygon && GeometryUtil.polygonSelfIntersecting(geom as Polygon)){
					geometryService.simplify([ geom ]);
				}
				else{
					//to improve search results
					if (geom.type == Geometry.MAPPOINT){
						geom = createExtentAroundMapPoint(geom as MapPoint, pointSearchTolerance);
					}
					
					queryFeaturesGraphical(geom);
				}
			}
			
			private function createExtentAroundMapPoint(centerPoint:MapPoint, tolerance:Number):Extent{
				var screenPoint:Point = map.toScreen(centerPoint as MapPoint);
				
				var upperLeftScreenPoint:Point = new Point(screenPoint.x - tolerance, screenPoint.y - tolerance);
				var lowerRightScreenPoint:Point = new Point(screenPoint.x + tolerance, screenPoint.y + tolerance);
				
				var upperLeftMapPoint:MapPoint = map.toMap(upperLeftScreenPoint);
				var lowerRightMapPoint:MapPoint = map.toMap(lowerRightScreenPoint);
				
				return new Extent(upperLeftMapPoint.x, upperLeftMapPoint.y, lowerRightMapPoint.x, lowerRightMapPoint.y, map.spatialReference);
			}
			
			private function iconRollOverHandler(event:MouseEvent):void{
				clearSelectionFilter();
				event.target.filters = [ glowFilter ];
			}
			
			private function iconRollOutHandler(event:MouseEvent):void{
				clearSelectionFilter();
			}
			
			private function clearSelectionFilter():void{
				for (var i:int = 0; i < imageGroup.numChildren; i++){
					if (imageGroup.getChildAt(i).filters && imageGroup.getChildAt(i).filters.length > 0){
						if (!(selectedDrawingIcon && imageGroup.getChildAt(i) === selectedDrawingIcon)){
							imageGroup.getChildAt(i).filters = [];
						}
					}
				}
			}
			
			private function geometryService_simplifyCompleteHandler(event:GeometryServiceEvent):void{
				queryFeaturesGraphical(event.result[0] as Polygon);
			}
			
			private function geometryService_faultHandler(event:FaultEvent):void{
				showError(event.fault.toString());
			}
			
			private function queryFeaturesGraphical(geom:Geometry):void{
				var identifyParams:IdentifyParameters = new IdentifyParameters();
				identifyParams.layerOption = IdentifyParameters.LAYER_OPTION_VISIBLE;
				identifyParams.returnGeometry = true;
				identifyParams.tolerance = pointSearchTolerance;
				identifyParams.width = map.width;
				identifyParams.height = map.height;
				identifyParams.geometry = geom;
				identifyParams.mapExtent = map.extent;
				identifyParams.spatialReference = map.spatialReference;
				identifyTask.execute(identifyParams, new AsyncResponder(myResultFunction, myFaultFunction));
			}
			
			private function myResultFunction(results:Array, token:Object = null):void {                
				if (results && results.length > 0){
					map.defaultGraphicsLayer.symbol=this.slsIdentify;
					for (var i:int = 0; i < results.length; i++) { 
						var result:IdentifyResult = results[i];
						if(result.layerName!=""){
							var graphic:Graphic=result.feature;
							graphic.addEventListener(MouseEvent.CLICK,onSelGraphicClickHandler);
							var newObj:Object=result.feature.attributes;
							newObj.lyrid=result.layerId;
							newObj.lyrname=result.layerName;							
							map.defaultGraphicsLayer.add(result.feature);
						}
					}
				}
			}
			
			private function onSelGraphicClickHandler(event:MouseEvent):void{
				var graphic:Graphic=event.currentTarget as Graphic;
				map.defaultGraphicsLayer.remove(graphic);
			}
			
			
			private function myFaultFunction(error:Object, token:Object = null):void{
				this.showError(String(error),"区域选择");
			}
			
			private function doShapeDel(event:MouseEvent):void{
				selectedDrawingIcon = FocusableImage(event.currentTarget);
				clearSelectionFilter();
				selectedDrawingIcon.filters = [ glowFilter ];
				
				finishDrawing = true;				
				this.setMapAction(null,null,null,null);
			}
			
			private function btnWaterPrjShapeSelClickHandler(event:MouseEvent):void{
				selectedDrawingIcon = null;
				clearSelectionFilter();	
				finishDrawing = true;				
				this.setMapAction(null,null,null,null);
				
				if(configData.scmid==""||configData.scmid==null){
					Alert.show("提交的河网区域没有指定方案","提交河网区域");
					return;
				}
				
				if(map.defaultGraphicsLayer.numGraphics>0){
					var graphicArray:ArrayCollection=map.defaultGraphicsLayer.graphicProvider as ArrayCollection;
					var str:String="";
					for(var i:int=0;i<graphicArray.length;i++){
						var gra:Graphic=graphicArray.getItemAt(i) as Graphic;
						var attrs:Object=gra.attributes;
						
						var newobj:Object={
							sid:configData.scmid,							
							regionid:attrs.REGIONID,
							binstrlen:attrs.BINSTRLEN,
							binstrval:attrs.BINSTRVAL,
							reghighid:attrs.REGHIGHID,						
							shape:JSONUtil.encode(gra.geometry)
						};
						
						if(i<(map.defaultGraphicsLayer.numGraphics-1))
						str+=JSON.stringify(newobj)+",";
						else str+=JSON.stringify(newobj);
					}
					
					var ext:Extent=	GraphicUtil.getGraphicsExtent(graphicArray.toArray());
//					var extStr:String=JSONUtil.encode(ext);
//					var extStr:String=",\"xmin\":"+ext.xmin+",\"xmax\":"+ext.xmax+",\"ymin\":"+ext.ymin+",\"ymax\":"+ext.ymax;
					
					var extStr:String=""+ext.xmax+";"+ext.xmin+";"+ext.ymax+";"+ext.ymin;
					
					try {
						var params:URLVariables=new URLVariables();
						params.rslt="{\"features\":["+str+"],\"extent\":"+extStr+"}";
//						params.rslt="{\"features\":["+str+"]"+extStr+"}";
						
						var url:String=reqUrl+"WinderHandler.aspx?act=addrgnsel";
						AppUtil.req(url,params,onSubmitWaterPrjSelectedShape,onFault,"POST",false,"text",600000);	
						this.cursorManager.setBusyCursor();	
					}
					catch(err:Error){
						this.cursorManager.removeBusyCursor();
//						showError(String(err),"河网区域选择");
					}
					
				}else{
					Alert.show("无选择的河网区域","河网区域选择");
				}
				
			}
			
			private function onSubmitWaterPrjSelectedShape(event:ResultEvent):void{
				var strResult:String=event.result as String;
				this.cursorManager.removeBusyCursor();	
				if(strResult){
					var obj:Object=JSON.parse(strResult);
					if(obj.msg=="ok"){
						Alert.show("河网区域选择成功！","区域选择");
						map.defaultGraphicsLayer.clear();
						this.cursorManager.removeBusyCursor();	
					}
				}
				
			}
			
			private function onFault(info:Object, token:Object = null) : void
			{                    
				this.cursorManager.removeBusyCursor(); 
//				showError(info.toString());
			}
			
			protected function btnWaterParams_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				ViewerContainer.getInstance().runWidget("水文预报参数设置");
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:GlowFilter id="glowFilter"
					  alpha="0.8"
					  color="#80FFFF"
					  inner="true"
					  strength="10"/>
		<esri:GeometryService id="geometryService"
							  fault="geometryService_faultHandler(event)"
							  simplifyComplete="geometryService_simplifyCompleteHandler(event)"/>
		<esri:SimpleLineSymbol id="slsIdentify"  width="10" alpha="0.5" color="0x00FFFF" style="solid"/>
		<esri:IdentifyTask id="identifyTask"   concurrency="last" showBusyCursor="true"  
						   url="http://166.111.47.28:6080/arcgis/rest/services/gdn/Hydro30/MapServer"/>
		
	</fx:Declarations>
	<s:VGroup width="100%" height="100%">
		<s:VGroup paddingLeft="10" paddingTop="5" horizontalCenter="0" verticalCenter="0" fontSize="16">		
			<s:Label text="{title}"/>
		</s:VGroup>
		<s:Group width="100%" height="100%" left="0" top="0" right="0" bottom="0">
			<mx:Accordion id="accordion" width="100%" height="100%"
						  fontSize="15">
				
				<mx:VBox label="气象模拟" width="100%" height="100%" left="0" top="0" right="0" bottom="0"
						 borderColor="#ccddee"
						 paddingLeft="0" paddingTop="0" paddingRight="0" paddingBottom="0"	>
					
				</mx:VBox>
				<mx:VBox label="流域模拟" width="100%" height="100%" left="0" top="0" right="0" bottom="0"
						 borderColor="#ccddee"
						 paddingLeft="0" paddingTop="0" paddingRight="0" paddingBottom="0"	>
					
					<s:VGroup paddingLeft="8" paddingTop="2" fontSize="14">
						<s:Button label="新建方案" width="160" click="btnWaterPrjNew_clickHandler(event)" />
						<s:Panel title="          区域选择" width="160" height="76">
							<s:HGroup id="imageGroup" width="100%"  gap="5" horizontalAlign="center" verticalAlign="middle">
							<components:FocusableImage name="{DrawTool.MAPPOINT}"
													   width="40" height="40"
													   buttonMode="true"
													   click="activateDrawTool(event)"
													   rollOut="iconRollOutHandler(event)"
													   rollOver="iconRollOverHandler(event)"
													   source="assets/images/i_draw_point.png"
													   toolTip="{pointLabel}"
													   useHandCursor="true"/>
							<components:FocusableImage name="{DrawTool.EXTENT}"
													   width="40" height="40"
													   buttonMode="true"
													   click="activateDrawTool(event)"
													   rollOut="iconRollOutHandler(event)"
													   rollOver="iconRollOverHandler(event)"
													   source="assets/images/i_draw_rect.png"
													   toolTip="{rectangleLabel}"
													   useHandCursor="true"/>
								
							<components:FocusableImage name="shapedel"
													   width="24" height="24"
													   buttonMode="true"
													   click="doShapeDel(event)"
													   rollOut="iconRollOutHandler(event)"
													   rollOver="iconRollOverHandler(event)"
													   source="assets/images/i_erase.png"
													   toolTip="删除选择的区域河网段"
													   useHandCursor="true"/>
							<components:FocusableImage name="shapeselok" 
													   width="32" height="32"
													   buttonMode="true"
													   click="btnWaterPrjShapeSelClickHandler(event)"
													   rollOut="iconRollOutHandler(event)"
													   rollOver="iconRollOverHandler(event)"
													   source="assets/images/i_ok.png"
													   toolTip="提交选择的区域河网段"
													   useHandCursor="true"/>
								
								
								</s:HGroup>
							
						</s:Panel>
						<s:Button label="参数设置"  width="160" click="btnWaterParams_clickHandler(event)" />	
						
					</s:VGroup>
					<s:VGroup top="100" height="20" width="100%">
						<s:Label id="lblCurrWaterPrjName" text="当前方案名称：" fontSize="13"/>
					</s:VGroup> 
				</mx:VBox>
				<mx:VBox label="河道模拟" width="100%" height="100%">
					<s:VGroup paddingLeft="8" paddingTop="2" fontSize="14">
						<s:Button label="新建方案" width="160" />
						<s:Button label="区域选择" width="160" />
						<s:Button label="断面编辑" width="160" />
						<s:Button label="边界条件" width="160" />
						<s:Button label="模拟设置" width="160" />
					</s:VGroup>
				</mx:VBox>
				<mx:VBox label="集成模拟" width="100%" height="100%">
				</mx:VBox>
				<mx:VBox label="方案管理" width="100%" height="100%">
				</mx:VBox>
				<mx:VBox label="系统管理" width="100%" height="100%">
				</mx:VBox>
				<mx:VBox label="退出系统" width="100%" height="100%">
				</mx:VBox>
			</mx:Accordion>
		</s:Group>
	</s:VGroup>
</viewer:BaseWidget>

