<?xml version="1.0" encoding="utf-8"?>
<viewer:BaseWidget xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:esri="http://www.esri.com/2008/ags"
				   xmlns:viewer="com.esri.viewer.*"
				   xmlns:components="com.esri.viewer.components.*"
				   initialize="basewidget_initializeHandler()"
				   widgetConfigLoaded="basewidget_widgetConfigLoaded()">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			
			import com.esri.viewer.AppEvent;
			import com.esri.viewer.AppUtil;
			import com.esri.viewer.ViewerContainer;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			private var newObj:Object;			
			private var reqUrl:String="";
			[Bindable]
			private var styleAlpha:Number;
		
			private function basewidget_initializeHandler():void
			{
				wTemplate.width=260;
				wTemplate.height=500;				
			}
			protected function basewidget_widgetConfigLoaded():void{	
				if (configXML){
					reqUrl = configXML.url;
				}					
				styleAlpha=configData.styleAlpha;
				var timer:Timer=new Timer(1000,1);
				timer.addEventListener(TimerEvent.TIMER_COMPLETE,onTimerComplete);
				timer.start();				
			}
			private function onTimerComplete(event:TimerEvent):void{
				AppEvent.addListener(AppEvent.DATA_PUBLISH,sharedDataUpdatedPublish);
				AppEvent.addListener(AppEvent.DATA_SENT,sharedDataUpdated);
				AppEvent.dispatch(AppEvent.DATA_FETCH_ALL);				
			}
			private function sharedDataUpdatedPublish(event:AppEvent):void{
				var data:Object = event.data;
				if(data.key=="ReservoirSetFlow")
				{
					var ac:ArrayCollection=data.collection;
					sharedData(ac);
					this.btnupload.enabled=true;
					return;
				}		
				if(data.key=="ReservoirShowFlow")
				{
					var ac1:ArrayCollection=data.collection;
					sharedData(ac1);
					this.btnupload.enabled=false;
				}	
			}
			private function sharedDataUpdated(event:AppEvent):void{
				var data:Object = event.data.find("ReservoirSetFlow");
				if(data !=null){
					var ac:ArrayCollection=data as ArrayCollection;
					sharedData(ac);
					this.btnupload.enabled=true;
					return;
				}
				data = event.data.find("ReservoirShowFlow");
				if(data !=null){
					var ac1:ArrayCollection=data as ArrayCollection;
					sharedData(ac1);
					this.btnupload.enabled=false;
				}
			}
			private function sharedData(ac:ArrayCollection):void
			{
				//水库基本信息
				newObj=ac.removeItemAt(0);
				this.prjListDG.dataProvider=ac;
			}			
			//上传
			protected function btnupload_clickHandler(event:MouseEvent):void
			{
				var ac:ArrayCollection=this.prjListDG.dataProvider as ArrayCollection;
				if(ac.length>0)
				{
					try 
					{
						var str:String="";
						var strtime:String="";
						for(var i:int=0;i<ac.length;i++)
						{
							//json日期问题
							strtime=ac[i].STIME.value;
							strtime=strtime.replace(" ","_");
							var newobj:Object={
								STIME:strtime,
								SFLOW:ac[i].SFLOW};
							if(i<(ac.length-1))
								str+=JSON.stringify(newobj)+",";
							else str+=JSON.stringify(newobj);
						}
						var params:URLVariables=new URLVariables();
						params.SID=configData.scmid;
						params.REGIONIDNEW =newObj.REGIONIDNEW;
						params.BINSTRLEN =newObj.BINSTRLEN;
						params.BINSTRVAL =newObj.BINSTRVAL;
						params.FLOW="{\"flow\":["+str+"]}";
						
						var url:String=reqUrl+"WinderHandler.aspx?act=addreservoirflow";
						//trace(params);
						AppUtil.req(url,params,onSubmitaddreservoirflow,onFault);
						this.cursorManager.setBusyCursor();	
					}
					catch(err:Error)
					{
						this.cursorManager.removeBusyCursor();
					}	
				}
				
			}
			private function onSubmitaddreservoirflow(event:ResultEvent):void
			{
				var strResult:String=event.result as String;
				this.cursorManager.removeBusyCursor();	
				if(strResult)
				{
					var obj:Object=JSON.parse(strResult);
					if(obj.msg=="ok")
					{
						Alert.show("Upload successfully.","Information");
						
					}
					else if(obj.msg=="error")
					{
						Alert.show("Failed","Information");
					}
					//关闭窗口
					AppEvent.dispatch(AppEvent.WIDGET_CLOSE, ViewerContainer.getInstance().getWidgetId("出流数据"));
				}
			}
			private function onFault(info:Object, token:Object = null) : void
			{                    
				this.cursorManager.removeBusyCursor(); 
				map.defaultGraphicsLayer.clear();
			}
			protected function btncancel_clickHandler(event:MouseEvent):void
			{
				//关闭窗口
				AppEvent.dispatch(AppEvent.WIDGET_CLOSE, ViewerContainer.getInstance().getWidgetId("出流数据"));
			}
		]]>
	</fx:Script>
	<viewer:WidgetTemplate id="wTemplate">
		<s:VGroup width="100%" height="100%">
			<s:DataGrid width="100%" height="100%" id="prjListDG" alpha="{styleAlpha}"
						chromeColor="0xF21515"
						alternatingRowColors="[ #FFFFFF,#EFEFF0]">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn dataField="STIME" headerText="TIME" sortable="true" ></s:GridColumn>
						<s:GridColumn dataField="SFLOW" headerText="FLOW(m³/s)"></s:GridColumn>						
					</s:ArrayList>
				</s:columns>
				<s:typicalItem>  
					<fx:Object TIME="2014/9/13 14:37" FLOW="关于水"></fx:Object>  
				</s:typicalItem>			
			</s:DataGrid>
			<s:HGroup horizontalAlign="right">
				<s:Button id="btnupload" label="Upload" click="btnupload_clickHandler(event)"/>
				<s:Button id="btncancel" label="Cancel" click="btncancel_clickHandler(event)"/>
			</s:HGroup>
		</s:VGroup>
	</viewer:WidgetTemplate>
</viewer:BaseWidget>
